tester:
  title: Guessing Tests
  description: |-
    'Perform tests for the guess action.'

  id: '002-007'
  groups:
    - guess
  id_pattern: '002-007-{:03}'


tests:
  - title: Plain Guess
    description: |-
      'Performs method guessing on the plain RMI registry.'

    command:
      - rmg
      - guess
      - ${TARGET}
      - --verbose
      - ${OPTIONS}

    validators:
      - error: False
      - contains:
          values:
            - Ignoring zero argument method
            - String system(String dummy, String[] dummy2)
            - String execute(String dummy)
            - String system(String dummy, String[] dummy2)
            - String execute(String dummy)
            - String login(java.util.HashMap dummy1)
            - void logMessage(int dummy1, String dummy2)
            - void releaseRecord(int recordID, String tableName, Integer remoteHashCode)


  - title: Plain Guess (--zero-arg & --create-samples)
    description: |-
      'Performs method guessing on the plain RMI registry'
      'using the --zero-arg & --create-samples flag.'

    command:
      - rmg
      - guess
      - ${TARGET}
      - --zero-arg
      - --create-samples
      - --verbose
      - ${OPTIONS}

    validators:
      - error: False
      - contains:
          invert:
            - Ignoring zero argument method
          values:
            - String system(String dummy, String[] dummy2)
            - String execute(String dummy)
            - String system(String dummy, String[] dummy2)
            - String execute(String dummy)
            - String login(java.util.HashMap dummy1)
            - void logMessage(int dummy1, String dummy2)
            - void releaseRecord(int recordID, String tableName, Integer remoteHashCode)


  - title: Sample Creation
    description: |-
      'Performs sample creation checks on the previous captured output.'

    command:
      - '${prev}'

    validators:
      - error: False
      - contains:
          values:
            - Starting creation of sample files
            - Writing sample file 
            - /rmg-samples/plain-server2/IPlainServer.java
            - /rmg-samples/plain-server2/system/system.java
            - /rmg-samples/plain-server2/execute/execute.java
            - /rmg-samples/legacy-service/LegacyServiceImpl_Stub_Interface.java
            - /rmg-samples/legacy-service/LegacyServiceImpl_Stub.java
            - /rmg-samples/legacy-service/login/login.java
            - /rmg-samples/legacy-service/logMessage/logMessage.java
            - /rmg-samples/legacy-service/releaseRecord/releaseRecord.java

      - file_contains:
          - file: ./rmg-samples/plain-server2/IPlainServer.java
            contains:
              - public interface IPlainServer extends Remote
              - String system(String dummy, String[] dummy2) throws RemoteException
              - String execute(String dummy) throws RemoteException

          - file: ./rmg-samples/plain-server2/system/system.java
            contains:
              - 'private static String remoteHost = "${DOCKER-IP}"'
              - java.lang.String argument0 = TODO
              - java.lang.String[] argument1 = TODO
              - java.lang.String response = stub.system(argument0, argument1)

          - file: ./rmg-samples/legacy-service/LegacyServiceImpl_Stub_Interface.java
            contains:
              - public interface LegacyServiceImpl_Stub_Interface extends Remote
              - String login(java.util.HashMap dummy1) throws RemoteException
              - void logMessage(int dummy1, String dummy2) throws RemoteException
              - void releaseRecord(int recordID, String tableName, Integer remoteHashCode) throws RemoteException

          - file: ./rmg-samples/legacy-service/LegacyServiceImpl_Stub.java
            contains:
              - = intf.getMethod("login", java.util.HashMap.class)
              - = intf.getMethod("logMessage", Integer.TYPE, java.lang.String.class)
              - = intf.getMethod("releaseRecord", Integer.TYPE, java.lang.String.class, java.lang.Integer.class)

          - file: ./rmg-samples/legacy-service/login/login.java
            contains:
              - 'private static String remoteHost = "${DOCKER-IP}"'
              - java.util.HashMap argument0 = TODO;
              - java.lang.String response = stub.login(argument0);

      - dir_exists:
          cleanup: True
          force: True
          dirs:
            - ./rmg-samples


  - title: SSL Guess
    description: |-
      'Performs method guessing on the ssl RMI registry.'

    command:
      - rmg
      - guess
      - ${TARGET-SSL}
      - --verbose
      - ${OPTIONS}

    validators:
      - error: False
      - contains:
          values:
            - Ignoring zero argument method
            - String system(String[] dummy)
            - int execute(String dummy)
            - void releaseRecord(int recordID, String tableName, Integer remoteHashCode)
            - String system(String dummy, String[] dummy2)
            - String execute(String dummy)
            - void updatePreferences(java.util.ArrayList dummy1)
            - void logMessage(int dummy1, Object dummy2)
            - String login(java.util.HashMap dummy1)


  - title: Activatable Guess
    description: |-
      'Performs method guessing on the registry opened by the acivation system.'
    command:
      - rmg
      - guess
      - ${TARGET-ACT}
      - --verbose
      - ${OPTIONS}

    validators:
      - error: False
      - contains:
          values:
            - 'You can use --follow to prevent this.'
            - 'Methods that take zero arguments are ignored by default. Use --zero-args to guess them'
            - 'Ignoring zero argument method: java.lang.String getStatus()'
            - 'The following bound names use a known remote object class'
            - 'You can use --force-guessing to guess methods anyway'
            - 'String execute(String dummy)'
            - 'String system(String dummy, String[] dummy2)'
            - 'void logMessage(int dummy1, Object dummy2)'
            - 'String login(java.util.HashMap dummy1)'
            - 'void updatePreferences(java.util.ArrayList dummy1)'
            - 'String system(String dummy, String[] dummy2)'
            - 'String execute(String dummy)'
            - 'java.rmi.activation.ActivationID registerObject(java.rmi.activation.ActivationDesc arg)'
            - 'void unregisterObject(java.rmi.activation.ActivationID arg)'
            - 'java.rmi.activation.ActivationGroupID registerGroup(java.rmi.activation.ActivationGroupDesc arg)'
            - 'java.rmi.activation.ActivationMonitor activeGroup(java.rmi.activation.ActivationGroupID arg, java.rmi.activation.ActivationInstantiator arg, long arg)'
            - 'void unregisterGroup(java.rmi.activation.ActivationGroupID arg)'
            - 'void shutdown()'
            - 'java.rmi.activation.ActivationDesc setActivationDesc(java.rmi.activation.ActivationID arg, java.rmi.activation.ActivationDesc arg)'
            - 'java.rmi.activation.ActivationGroupDesc setActivationGroupDesc(java.rmi.activation.ActivationGroupID arg, java.rmi.activation.ActivationGroupDesc arg)'
            - 'java.rmi.activation.ActivationDesc getActivationDesc(java.rmi.activation.ActivationID arg)'
            - 'java.rmi.activation.ActivationGroupDesc getActivationGroupDesc(java.rmi.activation.ActivationGroupID arg)'
